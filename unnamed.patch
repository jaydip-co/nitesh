Index: lib/Shared/Inputdecoration.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/Shared/Inputdecoration.dart	(revision 10924400712c0fa274108f358ca792c762c062c4)
+++ lib/Shared/Inputdecoration.dart	(date 1603375771216)
@@ -37,4 +37,15 @@
      focusedErrorBorder: OutlineInputBorder(borderSide: BorderSide(color: Colors.red),borderRadius: BorderRadius.circular(15.0)),
      errorBorder: OutlineInputBorder(borderSide: BorderSide(color: Colors.red),borderRadius: BorderRadius.circular(15.0)),
    labelStyle: TextStyle(color: CommonAssets.labelTextColor),
+ );
+
+ InputDecoration dropdownDecoration = InputDecoration(
+   enabledBorder: OutlineInputBorder(
+       borderSide: BorderSide(color:CommonAssets.dropdownbordercolor),
+       borderRadius: BorderRadius.circular(15.0)
+   ),
+   focusedBorder: OutlineInputBorder(
+       borderSide: BorderSide(color:Colors.green),
+       borderRadius: BorderRadius.circular(15.0)
+   ),
  );
\ No newline at end of file
Index: lib/Pages/Item/Product.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/Pages/Item/Product.dart	(revision 10924400712c0fa274108f358ca792c762c062c4)
+++ lib/Pages/Item/Product.dart	(date 1603380118449)
@@ -1,9 +1,12 @@
 import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:flutter/material.dart';
 import 'package:nitesh/Model/Appbar.dart';
+import 'package:nitesh/Model/Pages.dart';
 import 'package:nitesh/Model/Product.dart';
 import 'package:nitesh/Shared/Drawer.dart';
+import 'package:nitesh/Shared/Inputdecoration.dart';
 import 'package:nitesh/Shared/Loading.dart';
+import 'package:nitesh/commonAssets.dart';
 import 'package:provider/provider.dart';
 
 class Product extends StatefulWidget {
@@ -17,8 +20,9 @@
   int selectedimage  = 0;
   List<String> _category = List() ;
   List<String> _color = List();
-  String _selectedcategory;
-  String _selectedcolor;
+  String _selectedcategory  ;
+  String _selectedcolor ;
+  num saveamount ;
   @override
   void initState() {
     // TODO: implement initState
@@ -40,19 +44,24 @@
   Widget build(BuildContext context) {
     final width = MediaQuery.of(context).size.width ;
     final height = MediaQuery.of(context).size.height ;
-
+    final _pageprovider = Provider.of<PageProvider>(context);
+    final _tempProduct = Provider.of<TempProduct>(context);
     return StreamBuilder<DocumentSnapshot>(
       stream: Firestore.instance.collection('SellerProduct').document(widget.productname.toString()).snapshots(),
       builder: (context,snapshot){
+
         if(snapshot.hasData)
           {
-          _selectedcategory = _category[0];
-          _selectedcolor = _color[0];
+            saveamount =snapshot.data['Price']-snapshot.data['MRP'];
+
+
+
             return Scaffold(
               appBar: appbarWWidget(),
 
               body: SingleChildScrollView(
                 child: Container(
+
                   color: Colors.white,
                   child: Column(
                     crossAxisAlignment:CrossAxisAlignment.start,
@@ -63,8 +72,8 @@
                         width: width,
                         height: height/ 3 ,
                         decoration: BoxDecoration(
-                            color: Colors.grey,
-                          
+                          color: Colors.grey[100]
+
                         ),
 
                         child:Row(
@@ -86,12 +95,15 @@
                                 )
                               ],
                             ),
-                            Container(
+                            Expanded(
+                              child: Container(
+                                decoration: BoxDecoration(
 
-                              child: Expanded(
+                                ),
                                 child: Image(
-                                  image: NetworkImage(snapshot.data['Images'][selectedimage]),
-                                ),
+                                    image: NetworkImage(snapshot.data['Images'][selectedimage]),
+                                  ),
+
                               ),
                             ),
                             Row(
@@ -116,53 +128,136 @@
                           ],
                         )
                       ),
-                      Row(
-                        children: [
-                          Expanded(
-                            child: Text('Category'),
-                          ),
-                          Expanded(
-                            child: Text('Color'),
-                          ),
-                        ],
-                      ),
-                      Row(
-                        
-                        children: [
-                          Expanded(
-                            child: DropdownButtonFormField(
-                              onChanged: (val){
-                                setState(() {
-                                  _selectedcategory = val;
-                                });
-                              },
-                              value: _selectedcategory,
-                              items: _category.map((e){
-                                return DropdownMenuItem(
-                                  value: e.toString(),
-                                  child: Text(e),
-                                );
-                              }).toList(),
-                            ),
-                          ),
-                          Expanded(
-                            child: DropdownButtonFormField(
-                              onChanged: (val){
-                                setState(() {
-                                  _selectedcolor = val;
-                                });
-                              },
-                              value: _selectedcolor,
-                              items: _color.map((e){
-                                return DropdownMenuItem(
-                                  value: e.toString(),
-                                  child: Text(e),
-                                );
-                              }).toList(),
+                      Container(
+                        padding: EdgeInsets.all(10.0),
+
+                        child: Column(
+                          children: <Widget>[
+                            Column(
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              mainAxisAlignment: MainAxisAlignment.spaceAround,
+                              children: <Widget>[
+                                Text(
+                                  '₹'+snapshot.data['Price'].toString(),
+                                  style: TextStyle(
+                                    fontSize : 18,
+                                    fontWeight:FontWeight.bold,
+                                  ),
+                                ),
+                                Row(
+
+                                  children: <Widget>[
+                                    Text(
+                                      'MRP.:',
+                                      style: TextStyle(
+                                        fontSize: 18,
+
+                                      ),
+                                    ),
+                                    SizedBox(width :10),
+                                    Text(
+                                      '₹'+ snapshot.data['MRP'].toString(),
+                                      style: TextStyle(
+                                          fontSize: 18,
+                                          decoration: TextDecoration.lineThrough
+                                      ),
+                                    ),
+                                    SizedBox(width: 5,),
+                                    Text(
+                                      'Save ₹'+saveamount.toString(),
+                                      style: TextStyle(
+                                          fontSize: 18,
+                                          color: Colors.red
+                                      ),
+                                    )
+                                  ],
+                                ),
+                              ],
+                            ),
+
+                            Row(
+                              children: [
+
+                                Expanded(
+                                  child: Text('Category',
+                                    style: TextStyle(
+                                        fontSize: CommonAssets.fontsizeforlabel
+                                    ),
+                                  ),
+                                ),
+                                SizedBox(width: 5,),
+                                Expanded(
+                                  child: Text('Color',
+                                    style: TextStyle(
+                                        fontSize: CommonAssets.fontsizeforlabel
+                                    ),
+                                  ),
+                                ),
+                              ],
+                            ),
+                            SizedBox(height: 5,),
+                            Row(
+
+                              children: [
+
+                                Expanded(
+                                  child: DropdownButtonFormField(
+                                    decoration: dropdownDecoration,
+                                    onChanged: (val){
+                                      setState(() {
+                                        _selectedcategory = val;
+                                      });
+                                    },
+                                    value: _selectedcategory  ??_category[0],
+                                    items: _category.map((e){
+                                      return DropdownMenuItem(
+                                        value: e.toString(),
+                                        child: Text(e),
+                                      );
+                                    }).toList(),
+                                  ),
+                                ),
+                                SizedBox(width: 5,),
+                                Expanded(
+                                  child: DropdownButtonFormField(
+                                    decoration: dropdownDecoration,
+                                    onChanged: (val){
+                                      setState(() {
+                                        _selectedcolor = val;
+                                      });
+                                    },
+                                    value: _selectedcolor??_color[0],
+                                    items: _color.map((e){
+                                      return DropdownMenuItem(
+                                        value: e.toString(),
+                                        child: Text(e),
+                                      );
+                                    }).toList(),
+                                  ),
+                                ),
+
+                              ],
                             ),
-                          ),
-                        ],
+                            SizedBox(height:30),
+                            RaisedButton (
+                              padding: EdgeInsets.symmetric(vertical: 20,horizontal: width * 0.3),
+                              splashColor: Colors.black,
+                              shape: StadiumBorder(),
+                              color: CommonAssets.buttonColor,
+                              onPressed: (){},
+                              child: Text(
+                                  'Buy',
+                                style: TextStyle(
+                                  color:CommonAssets.buttonTextColor,
+                                    fontSize: CommonAssets.buttontextsize
+                                ),
+                              ),
+                            )
+                          ],
+                        ),
                       )
+
+
 
                     ],
                   ),
Index: lib/Pages/Home.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/Pages/Home.dart	(revision 10924400712c0fa274108f358ca792c762c062c4)
+++ lib/Pages/Home.dart	(date 1603356715867)
@@ -93,7 +93,7 @@
                       ),
                       Divider(
                          color: CommonAssets.dividerColor,
-                        thickness: 2.0,
+
                       ),
                       Expanded(
                         child: ListView.builder(
Index: lib/Wrapper.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/Wrapper.dart	(revision 10924400712c0fa274108f358ca792c762c062c4)
+++ lib/Wrapper.dart	(date 1603356248712)
@@ -1,3 +1,6 @@
+import 'dart:convert';
+
+import 'package:http/http.dart';
 import 'package:firebase_messaging/firebase_messaging.dart';
 import 'package:flutter/material.dart';
 import 'package:nitesh/Model/Pages.dart';
@@ -10,49 +13,103 @@
 import 'package:nitesh/Shared/PagesWapper.dart';
 import 'package:provider/provider.dart';
 class Wrapper extends StatelessWidget {
-  @override
-  Widget build(BuildContext context) {
-    // final user = Provider.of<User>(context);
-    //
-    // if(user != null){
-    //
-    //   return ChangeNotifierProvider<PageProvider>.value(
-    //     value: PageProvider(),
-    //       child: ChangeNotifierProvider<TempProduct>.value(
-    //           value: TempProduct(),
-    //           child: PagesWrapper()));
-    // }
-    // else{
-    //
-    //   return LogIn();
-    // }
-    return TestHome();
 
-  }
-}
-class TestHome extends StatefulWidget {
-  @override
-  _TestHomeState createState() => _TestHomeState();
-}
-
-class _TestHomeState extends State<TestHome> {
- final FirebaseMessaging mass = FirebaseMessaging();
-  @override
-  void initState() {
-
-    super.initState();
-    mass.configure(
-      onMessage: (ma){
-        print("$ma");
-      }
-    );
-  }
   @override
   Widget build(BuildContext context) {
-    return Scaffold(
+     final user = Provider.of<User>(context);
+
+     if(user != null){
+
+       return ChangeNotifierProvider<PageProvider>.value(
+         value: PageProvider(),
+           child: ChangeNotifierProvider<TempProduct>.value(
+               value: TempProduct(),
+               child: PagesWrapper()));
+     }
+     else{
 
-    );
+       return LogIn();
+     }
+
+
   }
 }
+//class TestHome extends StatefulWidget {
+//  @override
+//  _TestHomeState createState() => _TestHomeState();
+//}
+//
+//class _TestHomeState extends State<TestHome> {
+//  String titles = 'normal';
+// final FirebaseMessaging mass = FirebaseMessaging();
+// final Client client = Client();
+//  @override
+//  void initState() {
+//    customnoto();
+//    super.initState();
+//    mass.configure(
+//      onMessage: (Map<String, dynamic> mess){
+//        print(mess.toString());
+//      },
+//     onResume:  (Map<String, dynamic> mess){
+//       print(mess.toString());
+//     },
+//      onLaunch:  (Map<String, dynamic> mess){
+//          setState(() {
+//            titles = 'onluch';
+//          });
+//        print(mess.toString());
+//      },
+//    );
+//
+//  }
+//  Future customnoto()async{
+//    final String serverToken = 'AAAAyDHykpU:APA91bGybaVRBEVIPYjkOwkePEMUg0teZWy_ErEymI5eZXnqDfC1DvuRX1fMbDHmuVAqW-NFRplg1LKIoZSTu8y2z1USUeQfZ1Vt--rMmZomasb0mbf3rLjTzYM7UnBYHAOIM5mU1Zxr';
+//    final FirebaseMessaging firebaseMessaging = FirebaseMessaging();
+//    firebaseMessaging.onTokenRefresh.listen(tokenlistner);
+//  String token = await firebaseMessaging.getToken();
+//  print (token);
+//      firebaseMessaging.subscribeToTopic('all');
+//    await client.post(
+//      'https://fcm.googleapis.com/fcm/send',
+//      headers: <String, String>{
+//        'Content-Type': 'application/json',
+//        'Authorization': 'key=$serverToken',
+//      },
+//      body: jsonEncode(
+//        <String, dynamic>{
+//          'notification': <String, dynamic>{
+//            'body': 'this is a ABHAY',
+//            'title': 'this is a THE',
+//
+//          },
+//          'priority': 'high',
+//          'data': <String, dynamic>{
+//            'click_action': 'FLUTTER_NOTIFICATION_CLICK',
+//            'id': '1',
+//            'status': 'done'
+//          },
+//          'to':'/topics/all',
+//        },
+//      ),
+//    );
+//  }
+//   tokenlistner(String token){
+//    print('token - $token');
+//   }
+//  @override
+//  Widget build(BuildContext context) {
+//    return Scaffold(
+//    appBar: AppBar(
+//      title: RaisedButton(
+//        onPressed: ()async{
+//        await  customnoto();
+//        },
+//        child: Text('s'),
+//      ),
+//    ),
+//    );
+//  }
+//}
 
 
Index: lib/commonAssets.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/commonAssets.dart	(revision 10924400712c0fa274108f358ca792c762c062c4)
+++ lib/commonAssets.dart	(date 1603379840435)
@@ -9,11 +9,13 @@
   // inutdecoration
  static  Color cursorcolor = Colors.black;
  static  Color buttonColor = Colors.green.withOpacity(0.9);
-
  static Color buttonTextColor = Colors.white;
+ static double buttontextsize = 18.0;
+
  static Color flatbuttonTextColor = Colors.green;
  static Color labelTextColor = Colors.black;
-
+ static Color dropdownbordercolor = Colors.green;
  static Color dividerColor = Colors.black;
  static double dividerthickness = 1.0;
+ static double fontsizeforlabel = 16;
 }
\ No newline at end of file
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pubspec.lock	(revision 10924400712c0fa274108f358ca792c762c062c4)
+++ pubspec.lock	(date 1603339197594)
@@ -1,13 +1,27 @@
 # Generated by pub
 # See https://dart.dev/tools/pub/glossary#lockfile
 packages:
+  archive:
+    dependency: transitive
+    description:
+      name: archive
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.13"
+  args:
+    dependency: transitive
+    description:
+      name: args
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.6.0"
   async:
     dependency: transitive
     description:
       name: async
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.4.2"
+    version: "2.4.1"
   boolean_selector:
     dependency: transitive
     description:
@@ -15,13 +29,6 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.0.0"
-  characters:
-    dependency: transitive
-    description:
-      name: characters
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.0.0"
   charcode:
     dependency: transitive
     description:
@@ -29,13 +36,6 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.1.3"
-  clock:
-    dependency: transitive
-    description:
-      name: clock
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.0.1"
   cloud_firestore:
     dependency: "direct main"
     description:
@@ -63,7 +63,21 @@
       name: collection
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.14.13"
+    version: "1.14.12"
+  convert:
+    dependency: transitive
+    description:
+      name: convert
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
+  crypto:
+    dependency: transitive
+    description:
+      name: crypto
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.4"
   cupertino_icons:
     dependency: "direct main"
     description:
@@ -78,13 +92,6 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "0.1.4"
-  fake_async:
-    dependency: transitive
-    description:
-      name: fake_async
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.1.0"
   firebase:
     dependency: transitive
     description:
@@ -177,6 +184,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "3.1.4"
+  image:
+    dependency: transitive
+    description:
+      name: image
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.12"
   js:
     dependency: transitive
     description:
@@ -190,7 +204,7 @@
       name: matcher
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.12.8"
+    version: "0.12.6"
   meta:
     dependency: transitive
     description:
@@ -211,7 +225,7 @@
       name: path
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.7.0"
+    version: "1.6.4"
   pedantic:
     dependency: transitive
     description:
@@ -219,6 +233,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.9.0"
+  petitparser:
+    dependency: transitive
+    description:
+      name: petitparser
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.4.0"
   platform:
     dependency: transitive
     description:
@@ -272,7 +293,7 @@
       name: stack_trace
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.9.5"
+    version: "1.9.3"
   stream_channel:
     dependency: transitive
     description:
@@ -300,14 +321,14 @@
       name: test_api
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.17"
+    version: "0.2.15"
   typed_data:
     dependency: transitive
     description:
       name: typed_data
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0"
+    version: "1.1.6"
   vector_math:
     dependency: transitive
     description:
@@ -315,6 +336,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.0.8"
+  xml:
+    dependency: transitive
+    description:
+      name: xml
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.6.1"
 sdks:
-  dart: ">=2.9.0-14.0.dev <3.0.0"
+  dart: ">=2.7.0 <3.0.0"
   flutter: ">=1.16.0 <2.0.0"
